package gui;

import algorithms.AStar;
import algorithms.BreadthFirstSearch;
import algorithms.DepthFirstSearch;
import game.Problem;
import game.SokobanApp;
import game.SokobanSet;
import game.XSokobanSet;
import java.util.Stack;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author eduardo
 */
public class Main extends javax.swing.JFrame {
    private Problem problem;
    private Stack transitionStack;
    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        jButton_search.setText("Search "+algorithmsGroup.getSelection().getActionCommand()+" !");
        jTextArea_states.setText(getStateRep(SokobanSet.normal_level_01));
        problem = new Problem(SokobanSet.normal_level_01, 6);
    }
    
    private String getStateRep(char[][] state){
        StringBuilder value = new StringBuilder();
        for (char[] row : state) {
            for (char cell : row) {
                value.append(cell);
            }
            value.append('\n');
        }
        return value.toString();
    }//end getStateRep
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        algorithmsGroup = new javax.swing.ButtonGroup();
        boardGroup = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea_states = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea_info = new javax.swing.JTextArea();
        jButton_search = new javax.swing.JButton();
        jButton_playSolution = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jMenuBar = new javax.swing.JMenuBar();
        jMenu_settings = new javax.swing.JMenu();
        jMenu_search_algorithms = new javax.swing.JMenu();
        jRadioButtonMenuItem_BFS = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem_DFS = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem_Astar = new javax.swing.JRadioButtonMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem_about = new javax.swing.JMenuItem();
        jMenu_board = new javax.swing.JMenu();
        jMenu_simpleSet = new javax.swing.JMenu();
        jRadioButtonMenuItem_level_01 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem_level_03 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem_level_04 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem_level_05 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem_level_06 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem_level_07 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem_level_08 = new javax.swing.JRadioButtonMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jRadioButtonMenuItem2 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem3 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem4 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem5 = new javax.swing.JRadioButtonMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sokoban Solver");
        setResizable(false);

        jTextArea_states.setEditable(false);
        jTextArea_states.setColumns(20);
        jTextArea_states.setFont(new java.awt.Font("Monospaced", 0, 24)); // NOI18N
        jTextArea_states.setRows(5);
        jTextArea_states.setTabSize(4);
        jTextArea_states.setMargin(new java.awt.Insets(25, 25, 25, 25));
        jScrollPane1.setViewportView(jTextArea_states);

        jTextArea_info.setEditable(false);
        jTextArea_info.setColumns(20);
        jTextArea_info.setLineWrap(true);
        jTextArea_info.setRows(5);
        jScrollPane2.setViewportView(jTextArea_info);

        jButton_search.setText("Search !");
        jButton_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_searchActionPerformed(evt);
            }
        });

        jButton_playSolution.setText("Play Solution !");
        jButton_playSolution.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_playSolutionActionPerformed(evt);
            }
        });

        jLabel1.setText("Board");

        jLabel2.setText("Info");

        jMenu_settings.setText("Settings");

        jMenu_search_algorithms.setText("Search Algorithms");

        algorithmsGroup.add(jRadioButtonMenuItem_BFS);
        jRadioButtonMenuItem_BFS.setSelected(true);
        jRadioButtonMenuItem_BFS.setText("Breadth First Search");
        jRadioButtonMenuItem_BFS.setActionCommand("BFS");
        jRadioButtonMenuItem_BFS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem_BFSActionPerformed(evt);
            }
        });
        jMenu_search_algorithms.add(jRadioButtonMenuItem_BFS);

        algorithmsGroup.add(jRadioButtonMenuItem_DFS);
        jRadioButtonMenuItem_DFS.setText("Depth First Search");
        jRadioButtonMenuItem_DFS.setActionCommand("DFS");
        jRadioButtonMenuItem_DFS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem_DFSActionPerformed(evt);
            }
        });
        jMenu_search_algorithms.add(jRadioButtonMenuItem_DFS);

        algorithmsGroup.add(jRadioButtonMenuItem_Astar);
        jRadioButtonMenuItem_Astar.setText("A*");
        jRadioButtonMenuItem_Astar.setActionCommand("Astar");
        jRadioButtonMenuItem_Astar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem_AstarActionPerformed(evt);
            }
        });
        jMenu_search_algorithms.add(jRadioButtonMenuItem_Astar);

        jMenu_settings.add(jMenu_search_algorithms);
        jMenu_settings.add(jSeparator1);

        jMenuItem_about.setText("About");
        jMenuItem_about.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_aboutActionPerformed(evt);
            }
        });
        jMenu_settings.add(jMenuItem_about);

        jMenuBar.add(jMenu_settings);

        jMenu_board.setText("Board");

        jMenu_simpleSet.setText("Simple Boards");

        boardGroup.add(jRadioButtonMenuItem_level_01);
        jRadioButtonMenuItem_level_01.setSelected(true);
        jRadioButtonMenuItem_level_01.setText("Level 01");
        jRadioButtonMenuItem_level_01.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem_level_01ActionPerformed(evt);
            }
        });
        jMenu_simpleSet.add(jRadioButtonMenuItem_level_01);

        boardGroup.add(jRadioButtonMenuItem_level_03);
        jRadioButtonMenuItem_level_03.setText("Level 02");
        jRadioButtonMenuItem_level_03.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem_level_03ActionPerformed(evt);
            }
        });
        jMenu_simpleSet.add(jRadioButtonMenuItem_level_03);

        boardGroup.add(jRadioButtonMenuItem_level_04);
        jRadioButtonMenuItem_level_04.setText("Level 03");
        jRadioButtonMenuItem_level_04.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem_level_04ActionPerformed(evt);
            }
        });
        jMenu_simpleSet.add(jRadioButtonMenuItem_level_04);

        boardGroup.add(jRadioButtonMenuItem_level_05);
        jRadioButtonMenuItem_level_05.setText("Level 04");
        jRadioButtonMenuItem_level_05.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem_level_05ActionPerformed(evt);
            }
        });
        jMenu_simpleSet.add(jRadioButtonMenuItem_level_05);

        boardGroup.add(jRadioButtonMenuItem_level_06);
        jRadioButtonMenuItem_level_06.setText("Level 05");
        jRadioButtonMenuItem_level_06.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem_level_06ActionPerformed(evt);
            }
        });
        jMenu_simpleSet.add(jRadioButtonMenuItem_level_06);

        boardGroup.add(jRadioButtonMenuItem_level_07);
        jRadioButtonMenuItem_level_07.setText("Level 06");
        jRadioButtonMenuItem_level_07.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem_level_07ActionPerformed(evt);
            }
        });
        jMenu_simpleSet.add(jRadioButtonMenuItem_level_07);

        boardGroup.add(jRadioButtonMenuItem_level_08);
        jRadioButtonMenuItem_level_08.setText("Level 07");
        jRadioButtonMenuItem_level_08.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem_level_08ActionPerformed(evt);
            }
        });
        jMenu_simpleSet.add(jRadioButtonMenuItem_level_08);

        jMenu_board.add(jMenu_simpleSet);

        jMenu5.setText("XSokoban Boards");

        boardGroup.add(jRadioButtonMenuItem1);
        jRadioButtonMenuItem1.setText("Level 01");
        jRadioButtonMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem1ActionPerformed(evt);
            }
        });
        jMenu5.add(jRadioButtonMenuItem1);

        jMenu_board.add(jMenu5);

        jMenu1.setText("App Game Boards");

        boardGroup.add(jRadioButtonMenuItem2);
        jRadioButtonMenuItem2.setText("Level 01");
        jRadioButtonMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jRadioButtonMenuItem2);

        boardGroup.add(jRadioButtonMenuItem3);
        jRadioButtonMenuItem3.setText("Level 02");
        jRadioButtonMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jRadioButtonMenuItem3);

        boardGroup.add(jRadioButtonMenuItem4);
        jRadioButtonMenuItem4.setText("Level 03");
        jRadioButtonMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jRadioButtonMenuItem4);

        boardGroup.add(jRadioButtonMenuItem5);
        jRadioButtonMenuItem5.setText("Level 04");
        jRadioButtonMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem5ActionPerformed(evt);
            }
        });
        jMenu1.add(jRadioButtonMenuItem5);

        jMenu_board.add(jMenu1);

        jMenuBar.add(jMenu_board);

        setJMenuBar(jMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton_search, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton_playSolution, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(72, 72, 72))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 342, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton_search)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton_playSolution)
                        .addContainerGap(17, Short.MAX_VALUE))
                    .addComponent(jScrollPane1)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem_aboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_aboutActionPerformed
        JOptionPane.showMessageDialog(this, "Desarrollado por\n"
                + "Alumno : Luis Eduardo Vela Ruiz\n"
                + "No. control : 13041433\n"
                + "Alumno : Luis Javier Reyes Rodríguez\n"
                + "No. control : 1304####\n"
                + "Materia : Inteligencia Artificial");
    }//GEN-LAST:event_jMenuItem_aboutActionPerformed

    private void jRadioButtonMenuItem_level_01ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem_level_01ActionPerformed
        jTextArea_states.setText(getStateRep(SokobanSet.normal_level_01));
        problem = new Problem(SokobanSet.normal_level_01, 6);
    }//GEN-LAST:event_jRadioButtonMenuItem_level_01ActionPerformed

    private void jRadioButtonMenuItem_BFSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem_BFSActionPerformed
        jButton_search.setText("Search "+algorithmsGroup.getSelection().getActionCommand()+" !");
    }//GEN-LAST:event_jRadioButtonMenuItem_BFSActionPerformed

    private void jRadioButtonMenuItem_DFSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem_DFSActionPerformed
        jButton_search.setText("Search "+algorithmsGroup.getSelection().getActionCommand()+" !");
    }//GEN-LAST:event_jRadioButtonMenuItem_DFSActionPerformed

    private void jButton_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_searchActionPerformed
            String selectedAlgorithm = algorithmsGroup.getSelection().getActionCommand();    
            jTextArea_info.setText("");
            
            /*
            *   Executes BFS algorithm
            */
            if (selectedAlgorithm.equals("BFS")) {
                BreadthFirstSearch bfs = new BreadthFirstSearch(problem);
                bfs.search();
                String info = "solution : "+bfs.getSolution()+"\n\n"+
                              "nodes in frontier : "+bfs.getFrontierSize()+"\n\n"+
                              "moves : "+bfs.getNumberOfMoves()+"\n\n"+
                              "pushes : "+bfs.getNumberOfPushes()+"\n\n"+
                              "depth : "+bfs.getSolutionNodeDepth()+"\n\n"+
                              "time elapsed : "+bfs.getTimeElapsed()+" milliseconds\n\n"+
                              "memory used : "+bfs.getMemoryUsed()+" bytes\n\n"+
                              "explored nodes : "+bfs.getExplorados();
                jTextArea_info.setText(info);
                this.transitionStack = bfs.getTransitions();
                System.out.println(bfs.getSolution());
            }
            
            /*
            *   Executes DFS algorithm
            */
            if (selectedAlgorithm.equals("DFS")) {
                DepthFirstSearch dfs = new DepthFirstSearch(problem);
                dfs.search();
                String info = "solution : "+dfs.getSolution()+"\n\n"+
                              "nodes in frontier : "+dfs.getFrontierSize()+"\n\n"+
                              "moves : "+dfs.getNumberOfMoves()+"\n\n"+
                              "pushes : "+dfs.getNumberOfPushes()+"\n\n"+
                              "depth : "+dfs.getSolutionNodeDepth()+"\n\n"+
                              "time elapsed : "+dfs.getTimeElapsed()+" milliseconds\n\n"+
                              "memory used : "+dfs.getMemoryUsed()+" bytes\n\n"+
                              "explored nodes : "+dfs.getExplorados();
                jTextArea_info.setText(info);
                this.transitionStack = dfs.getTransitions();
                System.out.println(dfs.getSolution());
            }
            
            /*
            *   Executes A* algorithm
            */
            if (selectedAlgorithm.equals("Astar")) {
                AStar astar = new AStar(problem);
                astar.search();
                String info = "solution : "+astar.getSolution()+"\n\n"+
                              "nodes in frontier : "+astar.getFrontierSize()+"\n\n"+
                              "moves : "+astar.getNumberOfMoves()+"\n\n"+
                              "pushes : "+astar.getNumberOfPushes()+"\n\n"+
                              "depth : "+astar.getSolutionNodeDepth()+"\n\n"+
                              "time elapsed : "+astar.getTimeElapsed()+" milliseconds\n\n"+
                              "memory used : "+astar.getMemoryUsed()+" bytes\n\n"+
                              "explored nodes : "+astar.getExplorados();
                jTextArea_info.setText(info);
                this.transitionStack = astar.getTransitions();
                System.out.println(astar.getSolution());
            }
    }//GEN-LAST:event_jButton_searchActionPerformed

    private void jButton_playSolutionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_playSolutionActionPerformed
        Runnable animation = new Runnable() {
            @Override
            public void run() {
                for (Object bf : transitionStack) {
                    jTextArea_states.setText("");
                    jTextArea_states.setText(bf.toString());
                    try {
                        Thread.sleep(2000);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        };
        Thread thread = new Thread(animation);
        thread.start();
    }//GEN-LAST:event_jButton_playSolutionActionPerformed

    private void jRadioButtonMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem1ActionPerformed
        jTextArea_states.setText(getStateRep(XSokobanSet.x_level_01));
        problem = new Problem(XSokobanSet.x_level_01, 19);
    }//GEN-LAST:event_jRadioButtonMenuItem1ActionPerformed

    private void jRadioButtonMenuItem_level_03ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem_level_03ActionPerformed
        jTextArea_states.setText(getStateRep(SokobanSet.normal_level_03));   
        problem = new Problem(SokobanSet.normal_level_03, 7);
    }//GEN-LAST:event_jRadioButtonMenuItem_level_03ActionPerformed

    private void jRadioButtonMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem2ActionPerformed
        jTextArea_states.setText(getStateRep(SokobanApp.easy_level_01));   
        problem = new Problem(SokobanApp.easy_level_01, 7);
    }//GEN-LAST:event_jRadioButtonMenuItem2ActionPerformed

    private void jRadioButtonMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem3ActionPerformed
        jTextArea_states.setText(getStateRep(SokobanApp.easy_level_02));   
        problem = new Problem(SokobanApp.easy_level_02, 10);
    }//GEN-LAST:event_jRadioButtonMenuItem3ActionPerformed

    private void jRadioButtonMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem4ActionPerformed
        jTextArea_states.setText(getStateRep(SokobanApp.easy_level_03));   
        problem = new Problem(SokobanApp.easy_level_03, 11);
    }//GEN-LAST:event_jRadioButtonMenuItem4ActionPerformed

    private void jRadioButtonMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem5ActionPerformed
        jTextArea_states.setText(getStateRep(SokobanApp.easy_level_04));   
        problem = new Problem(SokobanApp.easy_level_04, 9);
    }//GEN-LAST:event_jRadioButtonMenuItem5ActionPerformed

    private void jRadioButtonMenuItem_AstarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem_AstarActionPerformed
        jButton_search.setText("Search A* !");
    }//GEN-LAST:event_jRadioButtonMenuItem_AstarActionPerformed

    private void jRadioButtonMenuItem_level_04ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem_level_04ActionPerformed
        jTextArea_states.setText(getStateRep(SokobanSet.normal_level_04));   
        problem = new Problem(SokobanSet.normal_level_04, 8);
    }//GEN-LAST:event_jRadioButtonMenuItem_level_04ActionPerformed

    private void jRadioButtonMenuItem_level_05ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem_level_05ActionPerformed
        jTextArea_states.setText(getStateRep(SokobanSet.normal_level_05));   
        problem = new Problem(SokobanSet.normal_level_05, 10);
    }//GEN-LAST:event_jRadioButtonMenuItem_level_05ActionPerformed

    private void jRadioButtonMenuItem_level_06ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem_level_06ActionPerformed
        jTextArea_states.setText(getStateRep(SokobanSet.normal_level_06));   
        problem = new Problem(SokobanSet.normal_level_06, 10);
    }//GEN-LAST:event_jRadioButtonMenuItem_level_06ActionPerformed

    private void jRadioButtonMenuItem_level_07ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem_level_07ActionPerformed
        jTextArea_states.setText(getStateRep(SokobanSet.normal_level_07));   
        problem = new Problem(SokobanSet.normal_level_07, 9);
    }//GEN-LAST:event_jRadioButtonMenuItem_level_07ActionPerformed

    private void jRadioButtonMenuItem_level_08ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem_level_08ActionPerformed
        jTextArea_states.setText(getStateRep(SokobanSet.normal_level_08));   
        problem = new Problem(SokobanSet.normal_level_08, 8);
    }//GEN-LAST:event_jRadioButtonMenuItem_level_08ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Normal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup algorithmsGroup;
    private javax.swing.ButtonGroup boardGroup;
    private javax.swing.JButton jButton_playSolution;
    private javax.swing.JButton jButton_search;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar;
    private javax.swing.JMenuItem jMenuItem_about;
    private javax.swing.JMenu jMenu_board;
    private javax.swing.JMenu jMenu_search_algorithms;
    private javax.swing.JMenu jMenu_settings;
    private javax.swing.JMenu jMenu_simpleSet;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem2;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem3;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem4;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem5;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem_Astar;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem_BFS;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem_DFS;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem_level_01;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem_level_03;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem_level_04;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem_level_05;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem_level_06;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem_level_07;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem_level_08;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JTextArea jTextArea_info;
    private javax.swing.JTextArea jTextArea_states;
    // End of variables declaration//GEN-END:variables
}//end class